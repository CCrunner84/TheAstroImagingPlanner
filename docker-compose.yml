version: '3'
services:
    app:
        build: .  # uncomment this line to build locally from source
        # image: gshau/astroimaging-planner:latest  # uncomment this line to pull down latest docker image 
        restart: always
        ports:
            - "8050:8050"
        volumes:
            - /Volumes/Users/gshau/Dropbox/AstroPlanner/dash_app:/app
            # path to the config files - tailor this path to your circumstances
            - /Volumes/Users/gshau/Dropbox/AstroPlanner/dash_app/conf:/app/conf
            # your roboclip path - tailor this path to your circumstances, typically set as `C:\Users\UserName\Documents\Voyager\Data` in Windows
            - /Volumes/Users/gshau/Dropbox/AstroBox/roboclip:/roboclip:ro
            # your DATA_DIR, everything after this path is of the format {target_name}/*/{fits_file} - tailor this path to your circumstances
            - /Volumes/Users/gshau/Dropbox/AstroBox/data:/data:ro
        environment:
            POSTGRES_USER: astro_user
            POSTGRES_PASSWORD: andromeda
            POSTGRES_DB: fits_files
            PGPORT: 5432
            PGHOST: db
        depends_on:
            - db
            - watchdog
    watchdog:
        build: .
        # image: gshau/astroimaging-planner:latest  # uncomment this line to pull down latest docker image 
        restart: always
        entrypoint: ["python", "./image_grading/watchdog.py"]
        volumes:
            - /Volumes/Users/gshau/Dropbox/AstroPlanner/dash_app:/app
            # path to the config files - tailor this path to your circumstances
            - /Volumes/Users/gshau/Dropbox/AstroPlanner/dash_app/conf:/app/conf
            # your DATA_DIR, everything after this path is of the format {target_name}/*/{fits_file} - tailor this path to your circumstances
            - /Volumes/Users/gshau/Dropbox/AstroBox/data:/data:ro
            # - /Volumes/Users/gshau/tmp/image_data/data:/data:ro
        environment:
            POSTGRES_USER: astro_user
            POSTGRES_PASSWORD: andromeda
            POSTGRES_DB: fits_files
            PGPORT: 5432
            PGHOST: db
        depends_on:
            - db
    db:
        image: postgres
        restart: always
        ports:
            - "5432:5432"
        environment:
            POSTGRES_USER: astro_user
            POSTGRES_PASSWORD: andromeda
            POSTGRES_DB: fits_files
            PGPORT: 5432
        logging:
            options:
                max-size: 10m
                max-file: "3"                